避免野指针：
1、初始化；（不知道该指向谁时，先指向空指针）int*p=NULL;
2、不越界；
3、指针使用空间被释放（例如：函数中调用空间，出函数时空间被释放）
      及时把指针指向空值 NULL；
4、检查有效性，if（*p！=NULL）{}


5、指针减去指针得到的是两个指针间的元素个数；（两个指针指向同一块空间）
6、数组名是数组首元素的地址；
7、函数声明    int Add（int，int）；
8、递归  把函数不停插入进去；
      存在限制条件，且一直逼近。 
9、   9.0f 是一个单精度浮点常量，它表示一个数值为 9 的浮点数。这里                    的 "f" 表示将常量看作是单精度浮点型而非双精度浮点型，因为在C语言中，没有后缀的小数默认被看作是双精度浮点型。
10、指针数组：存放一个类型指针的数组；
        数组指针：指向数组的指针；  int（*p）[10];
11、数组名代表首元素地址，2个例外：sizeof（数组名）表示整个数组大小，单位是字节；		&数组名，去除整个数组的地址；
12、二维数组名表示   首元素时第一行地址；
13、字符串输入避免空格停止  用 %[^\n];
14、const int *p     const 在*左边时，修饰*p即不可以通过*p来改变指向的内容，但是指针变量  p  可以改变
15、  const 在*右边时，p 不能改变即指针指向的对象不能变，但是可以通过解引用改变所指向的内容；

